version: '3'

services:
  rethinkdb:
    image: rethinkdb:2.3.6
    container_name: rethinkdb
    networks: 
      - "traefik"
    ports:
      - "28015:28015"
      - "8088:8080"
    volumes:
      - ./server/rethinkdb:/data
  horizon:
    image: rethinkdb/horizon
    container_name: horizon
    command: su -s /bin/sh horizon -c "hz serve --dev --connect rethinkdb://rethinkdb:28015 --bind all /usr/app"
    networks: 
      - "traefik"
    volumes:
      - ./client:/usr/app
    ports:
      - "8181:8181"
    depends_on:
      - rethinkdb
  django:
    build: ./server/
    container_name: django
    command: bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      # So that Django can interact with Docker host
      - /var/run/docker.sock:/var/run/docker.sock
      - ./server:/code
    ports:
      - "8000:8000"
    environment:
      - RDB_HOST=rethinkdb
      - RDB_PORT=28015
    depends_on:
      - horizon

    labels:
      - traefik.http.services.errorhandler-backend.loadbalancer.server.port=8000
      - traefik.http.routers.errorhandler.service=errorhandler-backend
      - "traefik.http.routers.errorhandler.rule=PathPrefix(`/graphql/`)"

  react:
    build:
      context: ./client/
      args:
        #SET THIS ARGUMENT TO REFLECT THE EXPOSED IP/HOSTNAME (1.1.1.1, example.com, localhost)

        - hosted_at=localhost
    container_name: react
    command: bash -c "cd /code && yarn install && yarn start"
    networks: 
      - "traefik"
    volumes:
      - ./client:/code
    ports:
      - "3000:3000"
    depends_on:
      - django

  reverse-proxy:
      # The official v2.0 Traefik docker image
      image: traefik:v2.0
      # Enables the web UI and tells Traefik to listen to docker
      command: --providers.docker --accesslog=true  --api=true 
      ports:
        # The HTTP port
        - "80:80"
        # The Web UI (enabled by --api=true)
        - "8080:8080"
      volumes:
        # So that Traefik can listen to the Docker events
        - /var/run/docker.sock:/var/run/docker.sock
      labels:
        # error handling definition:
        - traefik.http.middlewares.errorhandler.errors.status=404
        - traefik.http.middlewares.errorhandler.errors.service=errorhandler-backend
        - traefik.http.middlewares.errorhandler.errors.query=/graphql/
        
        # Declaring the user list
        #
        # Note: all dollar signs in the hash need to be doubled for escaping.
        # To create user:password pair, it's possible to use this command:
        # echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
        - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.routers.api.middlewares=auth"
        # TODO: change this from default with script
        - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$b1GdUNW6$$RnJ5pyIY3h4gf02KVI8N0."

      depends_on:
        - goodpath
        - default
        - django

  goodpath:
    image: apache
    build: .
    container_name: apache_goodpath
    labels:
      - "traefik.http.routers.goodpath.rule=Host(`traefik.ruehouse.com`)"
      - "traefik.http.routers.goodpath.rule=PathPrefix(`/goodpath`)"
      - traefik.http.routers.goodpath.middlewares=errorhandler@docker
      - traefik.http.services.goodpath.loadbalancer.server.port=80

  default:
    image: tutum/hello-world
    labels:
      - "traefik.http.routers.default.rule=Host(`traefik.ruehouse.com`)"
      - "traefik.http.routers.default.rule=PathPrefix(`/`)"
      - traefik.http.routers.default.middlewares=errorhandler@docker

networks:
  traefik:
        
